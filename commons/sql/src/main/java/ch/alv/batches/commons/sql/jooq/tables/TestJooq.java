/**
 * This class is generated by jOOQ
 */
package ch.alv.batches.commons.sql.jooq.tables;


import ch.alv.batches.commons.sql.jooq.Jobroom;
import ch.alv.batches.commons.sql.jooq.Keys;
import ch.alv.batches.commons.sql.jooq.tables.records.TestJooqRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TestJooq extends TableImpl<TestJooqRecord> {

    private static final long serialVersionUID = 1800526960;

    /**
     * The reference instance of <code>JOBROOM.TEST_JOOQ</code>
     */
    public static final TestJooq TEST_JOOQ = new TestJooq();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TestJooqRecord> getRecordType() {
        return TestJooqRecord.class;
    }

    /**
     * The column <code>JOBROOM.TEST_JOOQ.ID</code>.
     */
    public final TableField<TestJooqRecord, BigDecimal> ID = createField("ID", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>JOBROOM.TEST_JOOQ.VAL1</code>.
     */
    public final TableField<TestJooqRecord, String> VAL1 = createField("VAL1", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * Create a <code>JOBROOM.TEST_JOOQ</code> table reference
     */
    public TestJooq() {
        this("TEST_JOOQ", null);
    }

    /**
     * Create an aliased <code>JOBROOM.TEST_JOOQ</code> table reference
     */
    public TestJooq(String alias) {
        this(alias, TEST_JOOQ);
    }

    private TestJooq(String alias, Table<TestJooqRecord> aliased) {
        this(alias, aliased, null);
    }

    private TestJooq(String alias, Table<TestJooqRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Jobroom.JOBROOM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TestJooqRecord> getPrimaryKey() {
        return Keys.SYS_C0011148;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TestJooqRecord>> getKeys() {
        return Arrays.<UniqueKey<TestJooqRecord>>asList(Keys.SYS_C0011148);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TestJooq as(String alias) {
        return new TestJooq(alias, this);
    }

    /**
     * Rename this table
     */
    public TestJooq rename(String name) {
        return new TestJooq(name, null);
    }
}
